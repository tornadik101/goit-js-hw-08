{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAeC,SAASC,cAAc,kBACtCC,EAAQF,SAASC,cAAc,uBAC/BE,EAAUH,SAASC,cAAc,4BACjCG,EAAmB,sBACnBC,EAAgB,CAAEC,MAAO,GAAIC,QAAS,IAED,IAEuC,IAAxEC,EAAoBC,KAAKC,MAAMC,aAAaC,QAAQR,IACtDI,IACAN,EAAMW,MAAQL,EAAkBF,MAChCH,EAAQU,MAAQL,EAAkBD,SAIiBR,EAA1Ce,iBAAiB,QAASC,EAAAlB,EAAA,EACvC,SAAiBmB,GACbX,EAAcC,MAAQJ,EAAMW,MAAMI,OAClCZ,EAAcE,QAAUJ,EAAQU,MAAMI,OACtCN,aAAaO,QAAQd,EAAkBK,KAAKU,UAAUd,G,GAJD,MAS5BN,EAAhBe,iBAAiB,UAC9B,SAAkBE,GAEd,GADAA,EAAMI,iBACqB,KAAvBlB,EAAMW,MAAMI,QAA0C,KAAzBd,EAAQU,MAAMI,OAE3C,YADAI,QAAQC,IAAI,uCAGhBX,aAAaY,WAAWnB,GACxBF,EAAMW,MAAQ,GACdV,EAAQU,MAAQ,GAChBQ,QAAQG,IAAI,kBAAmBR,EAAMS,O,IAI3C,MAAOC,GACLL,QAAQC,IAAII,EAAMC,MAClBN,QAAQC,IAAII,EAAMnB,Q","sources":["src/js/03-feedback.js"],"sourcesContent":["import throttle from \"lodash/throttle\";                                // імпортуємо функцію throttle з бібліотеки lodash\n\nconst feedbackForm = document.querySelector(\".feedback-form\");         // посилання на форму\nconst email = document.querySelector('input[name=\"email\"]')            // посилання на input (поле введення Email) \nconst message = document.querySelector('textarea[name=\"message\"]');    // посилання на textarea (поле введення Message) \nconst LOCALSTORAGE_KEY = \"feedback-form-state\";                        // змінна, яка сберігає назву ключа у локальному сховищі\nconst inputFormData = { email: \"\", message: \"\", };                     // об'єкт, в якому будемо сберігати дані, введені в формі\n\ntry {\n    // перевіряємо на старті поля локального сховища, та якщо вони не порожні заповнюємо ними форму\n    const parsedStorageData = JSON.parse(localStorage.getItem(LOCALSTORAGE_KEY));\n    if (parsedStorageData) {\n        email.value = parsedStorageData.email;\n        message.value = parsedStorageData.message;\n    }\n\n    // Вішаємо слухач на форму, який відстежуватиме подію \"input\" кожні 500 міліхвл \n    feedbackForm.addEventListener(\"input\", throttle(onInput, 500));\n    function onInput(event) {\n        inputFormData.email = email.value.trim();\n        inputFormData.message = message.value.trim();\n        localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(inputFormData));\n    }\n\n    // Вішаємо слухач на форму, який відстежуватиме подію \"submit\", по якій будемо очищати локальне сховище та форму, \n    // і виводити у консоль об`єкт з полями {email, message}\n    feedbackForm.addEventListener(\"submit\", onSubmit);\n    function onSubmit(event) {\n        event.preventDefault();\n        if (email.value.trim() === \"\" || message.value.trim() === \"\") {\n            console.log(\"Please fill in all required fields.\");\n            return; // Виходимо з функції, не дозволяючи формі сабмітитись\n        }\n        localStorage.removeItem(LOCALSTORAGE_KEY);\n        email.value = \"\";\n        message.value = \"\";\n        console.dir(\"event.turget = \", event.turget);\n        //console.dir(inputFormData); \n    }\n\n} catch (error) {\n    console.log(error.name);\n    console.log(error.message);\n}\n"],"names":["$eaxEB","parcelRequire","$b00c40859be242c5$var$feedbackForm","document","querySelector","$b00c40859be242c5$var$email","$b00c40859be242c5$var$message","$b00c40859be242c5$var$LOCALSTORAGE_KEY","$b00c40859be242c5$var$inputFormData","email","message","$b00c40859be242c5$var$parsedStorageData","JSON","parse","localStorage","getItem","value","addEventListener","$parcel$interopDefault","event","trim","setItem","stringify","preventDefault","console","log","removeItem","dir","turget","error","name"],"version":3,"file":"03-feedback.abcf94cf.js.map"}